# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  rubocop:
    docker:
      - image: circleci/ruby:2.3
        environment:
          LOG_LEVEL: DEBUG
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "eh-mailer.gemspec" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "eh-mailer.gemspec" }}
      - run: bundle exec rubocop

  unit:
    docker:
      - image: circleci/ruby:2.3
        environment:
          LOG_LEVEL: DEBUG
    working_directory: ~/app
    steps:
      - checkout

      # download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "eh-mailer.gemspec" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            bundle exec appraisal install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "eh-mailer.gemspec" }}

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec appraisal rspec \
              --format progress \
              --color \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  publish_github_release:
    working_directory: ~/ap
    docker:
      - image: ehdevops/release_lib:0.0.1
        environment:
          GITHUB_REPOSITORY: 'Thinkei/eh-mailer'
    steps:
      - checkout
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(echo `cat ~/app/app.json` | jq .version | tr -d \")
            RELEASE_NOTE=$(node /usr/src/app/release_note.js -f ~/app/CHANGELOG.md -v $VERSION)
            echo "${RELEASE_NOTE}" > /release/release_note.txt
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n ${VERSION} -b "${RELEASE_NOTE}" -delete ${VERSION} /release/

  publish:
    docker:
      - image: ehdevops/ruby240:latest
    steps:
      - checkout
      - run: bundle check || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run:
          name: Deploy to gemfury
          command: |
            bundle exec ruby scripts/publish.rb

  publish_development:
    docker:
      - image: ehdevops/ruby240:latest
    steps:
      - checkout
      - run: bundle check || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run:
          name: Deploy to gemfury
          command: |
            bundle exec ruby scripts/publish_development.rb

workflows:
  version: 2
  test:
    jobs:
      - unit:
          context: org-global
      - rubocop:
          context: org-global
      - publish_new_version:
          type: approval
          filters:
            branches:
              only:
                - master
      - publish_development:
          context: org-global
          filters:
            branches:
              only:
                - development
          requires:
            - unit
            - rubocop
      - publish_github_release:
          context: org-global
          filters:
            branches:
              only:
                - master
          requires:
            - unit
            - rubocop
            - publish_new_version
      - publish:
          context: org-global
          filters:
            branches:
              only:
                - master
          requires:
            - rubocop
            - unit
            - publish_new_version
            - publish_github_release

